---
to: <%= h.path.resolve(rootDir, name, `${name}.ts`) %>
unless_exists: true
---
import { useState, useCallback } from 'react';
import type { <%= h.changeCase.pascal(name) %>Params, <%= h.changeCase.pascal(name) %>Result } from './<%= name %>.d';

export function <%= h.changeCase.camel(name) %>({ initialCount = 0 }: <%= h.changeCase.pascal(name) %>Params = {}): <%= h.changeCase.pascal(name) %>Result {
    const [count, setCount] = useState(initialCount);
    const increment = useCallback(() => setCount(prev => prev + 1), []);
    const decrement = useCallback(() => setCount(prev => prev - 1), []);

    return { count, increment, decrement, setCount };
}
